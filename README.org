#+TITLE: aider.el : aider (AI pair programming) inside emacs 

* Introduction

- Do you like the AI feature of [[https://www.cursor.com/][cursor AI code editor]], but don't want to leave emacs?

- aider.el provides an interactive interface to communicate with https://github.com/paul-gauthier/aider.
  - Most of elisp code in this repo was generated by aider / aider.el

* Why use aider.el in emacs?

- Pop-up menu: No need to remember the command. (aider-transient-menu, bind to C-c a by default)

[[file:./transient_menu.png]]

- Git repo specific aider session in emacs: automatically identify your git repo of current file, and create a new aider session for it. Multiple aider sessions can exist for different git repos.

- Region based refactor support: You can select a region (eg. code block) in file and ask aider to refactor that.

- .. And more: add your own elisp function to support your use case. For sure you can ask aider / aider.el to do that.

* Installation

- [[https://aider.chat/docs/install.html][Install aider]]
- Install dependency [[https://github.com/magit/transient][transient]] with package manager
- Install aider.el with following code

#+BEGIN_SRC emacs-lisp
  (use-package aider
    :straight (:host github :repo "tninja/aider.el")
    :config
    (setq aider-args '("--model" "gpt-4o-mini"))
    (setenv "OPENAI_API_KEY" <your-openai-api-key>))
#+END_SRC

* Screenshot

[[file:./screenshot.png]]

- In the above screenshot, aider was asked to generate a aider-help function, and add corresponding entry to menu (right top window)
- Aider get the command and generate the commit for it (left bottom
