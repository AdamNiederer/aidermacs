#+TITLE: aider.el : Aider (AI Pair Programming) Inside Emacs 

* Introduction

- Do you like the AI features of [[https://www.cursor.com/][Cursor AI Code Editor]], but prefer to stay within Emacs?

- Aider.el provides an interactive interface to communicate with https://github.com/paul-gauthier/aider.
  - Most of the Elisp code in this repository was generated by Aider / Aider.el.

* Why Use Aider.el in Emacs?

- Pop-up Menu: No need to remember commands. (aider-transient-menu, bound to C-c a by default)

[[file:./transient_menu.png]]

- Git Repository-Specific Aider Sessions in Emacs: Automatically identify the Git repository of the current file and create a new Aider session for it. Multiple Aider sessions can exist for different Git repositories.

- Region-Based Refactor Support: You can select a region (e.g., a code block) in a file and ask Aider to refactor it.

- And More: Add your own Elisp functions to support your use case. You can certainly ask Aider / Aider.el to do that.

* Installation

- [[https://aider.chat/docs/install.html][Install Aider]]
- Install the dependency [[https://github.com/magit/transient][Transient]] using your package manager.
- Install Aider.el with the following code:

#+BEGIN_SRC emacs-lisp
  (use-package aider
    :straight (:host github :repo "tninja/aider.el")
    :config
    (setq aider-args '("--model" "gpt-4o-mini"))
    (setenv "OPENAI_API_KEY" <your-openai-api-key>))
#+END_SRC

* Screenshot

[[file:./screenshot.png]]

- In the above screenshot, Aider was asked to generate an aider-help function and add the corresponding entry to the menu (top right window).
- Aider received the command and generated the commit for it (bottom left).
